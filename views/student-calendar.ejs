<!-- FILE: views/student-calendar.ejs -->
<!-- This file shows a monthly calendar with a circle on days that have events. -->

<h1>Student Calendar</h1>

<!-- 1) Load FullCalendar CSS/JS from a CDN (or local if you prefer) -->
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet"/>
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>

<div id="calendar"></div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const calendarEl = document.getElementById('calendar');

    // Initialize FullCalendar
    const calendar = new FullCalendar.Calendar(calendarEl, {
      // Show a monthly grid with forward/back navigation
      initialView: 'dayGridMonth',

      // Provide your events endpoint:
      // (already set up in server.js as /api/student/lessons)
      events: '/api/student/lessons',

      // Add a top toolbar with prev/next/today
      headerToolbar: {
        left: 'prev,next today',
        center: 'title',
        right: '' // no other views
      },

      // For each day cell, check if that day has any events
      // If so, draw a circle
      dayCellDidMount: function(info) {
        // 1) Grab all events currently loaded
        const allEvents = info.view.calendar.getEvents();

        // 2) Filter for events that fall exactly on this cell's date
        // (For a multi-day event, or time zone issues, you might need more logic)
        const eventsOnThisDay = allEvents.filter(e => {
          // Compare e.start date (ignoring time) to the cell date
          return e.start && e.start.toDateString() === info.date.toDateString();
        });

        // If there's at least one event, style the cell with a circle
        if (eventsOnThisDay.length > 0) {
          info.el.style.border = '2px solid #28a745';  // green border
          info.el.style.borderRadius = '50%';
          info.el.style.padding = '4px';
        }
      }
    });

    calendar.render();
  });
</script>
